// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Pango {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class AttrList : GLib.Opaque {

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_pango_attr_list_change(IntPtr raw, IntPtr attr);
		static d_pango_attr_list_change pango_attr_list_change = FuncLoader.LoadFunction<d_pango_attr_list_change>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Pango), "pango_attr_list_change"));

		public void Change(Pango.Attribute attr) {
			pango_attr_list_change(Handle, attr.Handle);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_pango_attr_list_copy(IntPtr raw);
		static d_pango_attr_list_copy pango_attr_list_copy = FuncLoader.LoadFunction<d_pango_attr_list_copy>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Pango), "pango_attr_list_copy"));

		public Pango.AttrList Copy() {
			IntPtr raw_ret = pango_attr_list_copy(Handle);
			Pango.AttrList ret = raw_ret == IntPtr.Zero ? null : (Pango.AttrList) GLib.Opaque.GetOpaque (raw_ret, typeof (Pango.AttrList), true);
			return ret;
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_pango_attr_list_filter(IntPtr raw, PangoSharp.AttrFilterFuncNative func, IntPtr data);
		static d_pango_attr_list_filter pango_attr_list_filter = FuncLoader.LoadFunction<d_pango_attr_list_filter>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Pango), "pango_attr_list_filter"));

		public Pango.AttrList Filter(Pango.AttrFilterFunc func) {
			PangoSharp.AttrFilterFuncWrapper func_wrapper = new PangoSharp.AttrFilterFuncWrapper (func);
			IntPtr raw_ret = pango_attr_list_filter(Handle, func_wrapper.NativeDelegate, IntPtr.Zero);
			Pango.AttrList ret = raw_ret == IntPtr.Zero ? null : (Pango.AttrList) GLib.Opaque.GetOpaque (raw_ret, typeof (Pango.AttrList), false);
			return ret;
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_pango_attr_list_get_iterator(IntPtr raw);
		static d_pango_attr_list_get_iterator pango_attr_list_get_iterator = FuncLoader.LoadFunction<d_pango_attr_list_get_iterator>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Pango), "pango_attr_list_get_iterator"));

		public Pango.AttrIterator Iterator { 
			get {
				IntPtr raw_ret = pango_attr_list_get_iterator(Handle);
				Pango.AttrIterator ret = raw_ret == IntPtr.Zero ? null : (Pango.AttrIterator) GLib.Opaque.GetOpaque (raw_ret, typeof (Pango.AttrIterator), true);
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_pango_attr_list_get_type();
		static d_pango_attr_list_get_type pango_attr_list_get_type = FuncLoader.LoadFunction<d_pango_attr_list_get_type>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Pango), "pango_attr_list_get_type"));

		public static GLib.GType GType { 
			get {
				IntPtr raw_ret = pango_attr_list_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_pango_attr_list_splice(IntPtr raw, IntPtr other, int pos, int len);
		static d_pango_attr_list_splice pango_attr_list_splice = FuncLoader.LoadFunction<d_pango_attr_list_splice>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Pango), "pango_attr_list_splice"));

		public void Splice(Pango.AttrList other, int pos, int len) {
			pango_attr_list_splice(Handle, other == null ? IntPtr.Zero : other.Handle, pos, len);
		}

		public AttrList(IntPtr raw) : base(raw) {}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_pango_attr_list_new();
		static d_pango_attr_list_new pango_attr_list_new = FuncLoader.LoadFunction<d_pango_attr_list_new>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Pango), "pango_attr_list_new"));

		public AttrList () 
		{
			Raw = pango_attr_list_new();
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr d_pango_attr_list_ref(IntPtr raw);
		static d_pango_attr_list_ref pango_attr_list_ref = FuncLoader.LoadFunction<d_pango_attr_list_ref>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Pango), "pango_attr_list_ref"));

		protected override void Ref (IntPtr raw)
		{
			if (!Owned) {
				pango_attr_list_ref (raw);
				Owned = true;
			}
		}

		[Obsolete("Pango.AttrList is now refcounted automatically")]
		public AttrList Ref () { return this; }

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void d_pango_attr_list_unref(IntPtr raw);
		static d_pango_attr_list_unref pango_attr_list_unref = FuncLoader.LoadFunction<d_pango_attr_list_unref>(FuncLoader.GetProcAddress(GLibrary.Load(Library.Pango), "pango_attr_list_unref"));

		protected override void Unref (IntPtr raw)
		{
			if (Owned) {
				pango_attr_list_unref (raw);
				Owned = false;
			}
		}

		[Obsolete("Pango.AttrList is now refcounted automatically")]
		public void Unref () {}

		class FinalizerInfo {
			IntPtr handle;
			public uint timeoutHandlerId;

			public FinalizerInfo (IntPtr handle)
			{
				this.handle = handle;
			}

			public bool Handler ()
			{
				pango_attr_list_unref (handle);
				GLib.Timeout.Remove(timeoutHandlerId);
				return false;
			}
		}

		~AttrList ()
		{
			if (!Owned)
				return;
			FinalizerInfo info = new FinalizerInfo (Handle);
			info.timeoutHandlerId = GLib.Timeout.Add (50, new GLib.TimeoutHandler (info.Handler));
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _abi_info = null;
		static public GLib.AbiStruct abi_info {
			get {
				if (_abi_info == null)
					_abi_info = new GLib.AbiStruct (new List<GLib.AbiField>{ 
					});

				return _abi_info;
			}
		}


		// End of the ABI representation.

#endregion
	}
}
