// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gst.Video {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

    using GStreamer;

    #region Autogenerated code
	public partial class VideoAggregatorConvertPad : Gst.Video.VideoAggregatorPad {

		public VideoAggregatorConvertPad (IntPtr raw) : base(raw) {}

		protected VideoAggregatorConvertPad() : base(IntPtr.Zero)
		{
			CreateNativeObject (new string [0], new GLib.Value [0]);
		}

		[GLib.Property ("converter-config")]
		public Gst.Structure ConverterConfig {
			get {
				GLib.Value val = GetProperty ("converter-config");
				Gst.Structure ret = (Gst.Structure) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value, "GstStructure*");
				SetProperty("converter-config", val);
				val.Dispose ();
			}
		}

		static CreateConversionInfoNativeDelegate CreateConversionInfo_cb_delegate;
		static CreateConversionInfoNativeDelegate CreateConversionInfoVMCallback {
			get {
				if (CreateConversionInfo_cb_delegate == null)
					CreateConversionInfo_cb_delegate = new CreateConversionInfoNativeDelegate (CreateConversionInfo_cb);
				return CreateConversionInfo_cb_delegate;
			}
		}

		static void OverrideCreateConversionInfo (GLib.GType gtype)
		{
			OverrideCreateConversionInfo (gtype, CreateConversionInfoVMCallback);
		}

		static void OverrideCreateConversionInfo (GLib.GType gtype, CreateConversionInfoNativeDelegate callback)
		{
			unsafe {
				IntPtr* raw_ptr = (IntPtr*)(((long) gtype.GetClassPtr()) + (long) class_abi.GetFieldOffset("create_conversion_info"));
				*raw_ptr = Marshal.GetFunctionPointerForDelegate((Delegate) callback);
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void CreateConversionInfoNativeDelegate (IntPtr inst, IntPtr agg, IntPtr conversion_info);

		static void CreateConversionInfo_cb (IntPtr inst, IntPtr agg, IntPtr conversion_info)
		{
			try {
				VideoAggregatorConvertPad __obj = GLib.Object.GetObject (inst, false) as VideoAggregatorConvertPad;
				__obj.OnCreateConversionInfo (GLib.Object.GetObject(agg) as Gst.Video.VideoAggregator, conversion_info == IntPtr.Zero ? null : (Gst.Video.VideoInfo) GLib.Opaque.GetOpaque (conversion_info, typeof (Gst.Video.VideoInfo), false));
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(Gst.Video.VideoAggregatorConvertPad), ConnectionMethod="OverrideCreateConversionInfo")]
		protected virtual void OnCreateConversionInfo (Gst.Video.VideoAggregator agg, Gst.Video.VideoInfo conversion_info)
		{
			InternalCreateConversionInfo (agg, conversion_info);
		}

		private void InternalCreateConversionInfo (Gst.Video.VideoAggregator agg, Gst.Video.VideoInfo conversion_info)
		{
			CreateConversionInfoNativeDelegate unmanaged = null;
			unsafe {
				IntPtr* raw_ptr = (IntPtr*)(((long) this.LookupGType().GetThresholdType().GetClassPtr()) + (long) class_abi.GetFieldOffset("create_conversion_info"));
				unmanaged = (CreateConversionInfoNativeDelegate) Marshal.GetDelegateForFunctionPointer(*raw_ptr, typeof(CreateConversionInfoNativeDelegate));
			}
			if (unmanaged == null) return;

			unmanaged (this.Handle, agg == null ? IntPtr.Zero : agg.Handle, conversion_info == null ? IntPtr.Zero : conversion_info.Handle);
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _class_abi = null;
		static public new GLib.AbiStruct class_abi {
			get {
				if (_class_abi == null)
					_class_abi = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("create_conversion_info"
							, Gst.Video.VideoAggregatorPad.class_abi.Fields
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // create_conversion_info
							, null
							, "_gst_reserved"
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
						new GLib.AbiField("_gst_reserved"
							, -1
							, (uint) Marshal.SizeOf(typeof(IntPtr)) * 4 // _gst_reserved
							, "create_conversion_info"
							, null
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
					});

				return _class_abi;
			}
		}


		// End of the ABI representation.

		[DllImport(DLL.GstVideo, CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gst_video_aggregator_convert_pad_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = gst_video_aggregator_convert_pad_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport(DLL.GstVideo, CallingConvention = CallingConvention.Cdecl)]
		static extern void gst_video_aggregator_convert_pad_update_conversion_info(IntPtr raw);

		public void UpdateConversionInfo() {
			gst_video_aggregator_convert_pad_update_conversion_info(Handle);
		}


		static VideoAggregatorConvertPad ()
		{
			GtkSharp.GstreamerSharp.ObjectManager.Initialize ();
		}

		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _abi_info = null;
		static public new GLib.AbiStruct abi_info {
			get {
				if (_abi_info == null)
					_abi_info = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("priv"
							, Gst.Video.VideoAggregatorPad.abi_info.Fields
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // priv
							, null
							, "_gst_reserved"
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
						new GLib.AbiField("_gst_reserved"
							, -1
							, (uint) Marshal.SizeOf(typeof(IntPtr)) * 4 // _gst_reserved
							, "priv"
							, null
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
					});

				return _abi_info;
			}
		}


		// End of the ABI representation.

#endregion
	}
}
