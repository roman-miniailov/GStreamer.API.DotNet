// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GES
{

    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Runtime.InteropServices;

    using GStreamer;

    #region Autogenerated code
    public partial class BaseXmlFormatter : GES.Formatter
    {

        protected BaseXmlFormatter(IntPtr raw) : base(raw) { }

        protected BaseXmlFormatter() : base(IntPtr.Zero)
        {
            CreateNativeObject(new string[0], new GLib.Value[0]);
        }


        // Internal representation of the wrapped structure ABI.
        static GLib.AbiStruct _class_abi = null;
        static public new GLib.AbiStruct class_abi
        {
            get
            {
                if (_class_abi == null)
                    _class_abi = new GLib.AbiStruct(new List<GLib.AbiField>{
                        new GLib.AbiField("content_parser"
                            , GES.Formatter.class_abi.Fields
                            , (uint) Marshal.SizeOf(typeof(GLib.MarkupParser)) // content_parser
							, null
                            , "save"
                            , (long) Marshal.OffsetOf(typeof(GESBaseXmlFormatter_content_parserAlign), "content_parser")
                            , 0
                            ),
                        new GLib.AbiField("save"
                            , -1
                            , (uint) Marshal.SizeOf(typeof(IntPtr)) // save
							, "content_parser"
                            , "_ges_reserved"
                            , (uint) Marshal.SizeOf(typeof(IntPtr))
                            , 0
                            ),
                        new GLib.AbiField("_ges_reserved"
                            , -1
                            , (uint) Marshal.SizeOf(typeof(IntPtr)) * 4 // _ges_reserved
							, "save"
                            , null
                            , (uint) Marshal.SizeOf(typeof(IntPtr))
                            , 0
                            ),
                    });

                return _class_abi;
            }
        }

        [StructLayout(LayoutKind.Sequential)]
        public struct GESBaseXmlFormatter_content_parserAlign
        {
            sbyte f1;
            private GLib.MarkupParser content_parser;
        }


        // End of the ABI representation.

        [DllImport(DLL.GES, CallingConvention = CallingConvention.Cdecl)]
        static extern IntPtr ges_base_xml_formatter_get_type();

        public static new GLib.GType GType
        {
            get
            {
                IntPtr raw_ret = ges_base_xml_formatter_get_type();
                GLib.GType ret = new GLib.GType(raw_ret);
                return ret;
            }
        }


        static BaseXmlFormatter()
        {
            GtkSharp.GstEditingServices.ObjectManager.Initialize();
        }

        // Internal representation of the wrapped structure ABI.
        static GLib.AbiStruct _abi_info = null;
        static public new GLib.AbiStruct abi_info
        {
            get
            {
                if (_abi_info == null)
                    _abi_info = new GLib.AbiStruct(new List<GLib.AbiField>{
                        new GLib.AbiField("priv"
                            , GES.Formatter.abi_info.Fields
                            , (uint) Marshal.SizeOf(typeof(IntPtr)) // priv
							, null
                            , "xmlcontent"
                            , (uint) Marshal.SizeOf(typeof(IntPtr))
                            , 0
                            ),
                        new GLib.AbiField("xmlcontent"
                            , -1
                            , (uint) Marshal.SizeOf(typeof(IntPtr)) // xmlcontent
							, "priv"
                            , "_ges_reserved"
                            , (uint) Marshal.SizeOf(typeof(IntPtr))
                            , 0
                            ),
                        new GLib.AbiField("_ges_reserved"
                            , -1
                            , (uint) Marshal.SizeOf(typeof(IntPtr)) * 3 // _ges_reserved
							, "xmlcontent"
                            , null
                            , (uint) Marshal.SizeOf(typeof(IntPtr))
                            , 0
                            ),
                    });

                return _abi_info;
            }
        }


        // End of the ABI representation.

        #endregion
    }
}
