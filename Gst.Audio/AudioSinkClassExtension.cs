// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gst.Audio {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct AudioSinkClassExtension : IEquatable<AudioSinkClassExtension> {

		private IntPtr _clear_all;

		public static Gst.Audio.AudioSinkClassExtension Zero = new Gst.Audio.AudioSinkClassExtension ();

		public static Gst.Audio.AudioSinkClassExtension New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Gst.Audio.AudioSinkClassExtension.Zero;
			return (Gst.Audio.AudioSinkClassExtension) Marshal.PtrToStructure (raw, typeof (Gst.Audio.AudioSinkClassExtension));
		}

		public bool Equals (AudioSinkClassExtension other)
		{
			return true && _clear_all.Equals (other._clear_all);
		}

		public override bool Equals (object other)
		{
			return other is AudioSinkClassExtension && Equals ((AudioSinkClassExtension) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ _clear_all.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
